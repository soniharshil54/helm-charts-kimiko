apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-update-script
  namespace: {{ .Values.namespace }}
data:
  update-cloudfront-ips.sh: |
    #!/bin/sh

    set -e  # Exit immediately if a command exits with a non-zero status

    # Fetch CloudFront IPs and store them as a YAML-formatted list with proper indentation
    cloudfront_ips=$(curl -s {{ .Values.cloudfrontIpUrl }} | jq -r '.CLOUDFRONT_GLOBAL_IP_LIST | map("          - " + .) | join("\n")')

    # Check if cloudfront_ips is empty
    if [ -z "$cloudfront_ips" ]; then
      echo "Error: Failed to fetch CloudFront IPs."
      exit 1
    fi

    # Build the AuthorizationPolicy YAML
    policy_yaml=$(cat <<EOF
    apiVersion: security.istio.io/v1beta1
    kind: AuthorizationPolicy
    metadata:
      name: {{ .Release.Name }}-cloudfront-authpolicy
      namespace: {{ .Values.namespace }}
    spec:
      action: ALLOW
      rules:
      - from:
        - source:
            remoteIpBlocks:
    $cloudfront_ips
    EOF
    )

    # Output the generated YAML for debugging
    echo "Generated AuthorizationPolicy YAML:"
    echo "$policy_yaml"

    # Apply the AuthorizationPolicy
    echo "$policy_yaml" | kubectl apply -f -
